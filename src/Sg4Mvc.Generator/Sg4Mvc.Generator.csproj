<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>netstandard2.0</TargetFramework>
		<IncludeBuildOutput>false</IncludeBuildOutput>
		<IsRoslynComponent>true</IsRoslynComponent>
		<LangVersion>10</LangVersion>
		<ContentTargetFolders>analyzers/dotnet/cs</ContentTargetFolders>
		<DevelopmentDependency>True</DevelopmentDependency>
	</PropertyGroup>

	<PropertyGroup>
		<PackageId>SG4Mvc.Generator</PackageId>
		<Authors>Mark Flanagan, Kevin Kuszyk, Scott Mackay, Artiom Chilaru</Authors>
		<PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
		<PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
		<PackageProjectUrl>https://github.com/T4MVC/R4MVC</PackageProjectUrl>
		<RepositoryUrl>https://github.com/T4MVC/R4MVC</RepositoryUrl>
		<Title>SG4Mvc Generator</Title>
		<Description>SG4MVC is a tool that generates strongly typed helpers for ASP.NET Core MVC.</Description>
		<PackageTags>aspnetcore mvc r4mvc</PackageTags>
		<VersionPrefix>1.0.0</VersionPrefix>
		<AssemblyVersion Condition="$(BuildNumber) != ''">$(VersionPrefix).$(BuildNumber)</AssemblyVersion>
		<PackageReleaseNotes>
			+ Adding the option to add extra namespaces to generated files
			! Now working with multi-targeted projects (#66)
			+ Now available as a dotnet cli tool (see R4Mvc.Tools.Cli package)
		</PackageReleaseNotes>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)'=='Release'">
		<IsPackable>true</IsPackable>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.2.0" PrivateAssets="all" />
	</ItemGroup>

	<!-- This ensures the library will be packaged as a source generator when we use `dotnet pack` -->
	<ItemGroup>
		<None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
	</ItemGroup>

</Project>
